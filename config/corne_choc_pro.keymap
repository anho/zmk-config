/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/german.dtsi"
#include "keys_de.h"

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        long_press: long_press {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_PRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        home_row_shift_right: home_row_shift_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_SHIFT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
            hold-trigger-on-release;
            retro-tap;
        };

        home_row_shift_left: home_row_shift_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_SHIFT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45>;
            retro-tap;
        };

        home_row_right: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
            retro-tap;
        };

        home_row_left: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45>;
            flavor = "tap-preferred";
            retro-tap;
        };

        semi_colon: semi_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_COLON";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            label = "COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bracket_pointy: bracket_pointy {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET_POINTY";
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bracket_round: bracket_round {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET_ROUND";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bracket_square: bracket_square {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET_SQUARE";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        bracket_curly: bracket_curly {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET_CURLY";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        plus_equal: plus_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS_EQUAL";
            bindings = <&kp PLUS>, <&kp KP_EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwerty {
            display-name = "qwerty";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q                          &kp W                      &kp E                      &kp R                              &long_press RG(T) T  &none  &none  &kp Y      &kp U                                &kp I                        &kp O                        &kp P                                       &kp BACKSLASH
&kp TAB     &home_row_left LEFT_CONTROL A  &home_row_left LEFT_ALT S  &home_row_left LEFT_GUI D  &home_row_shift_left LEFT_SHIFT F  &kp G                &none  &none  &kp H      &home_row_shift_right RIGHT_SHIFT J  &home_row_right RIGHT_GUI K  &home_row_right RIGHT_ALT L  &home_row_right RIGHT_CONTROL SINGLE_QUOTE  &kp SLASH
&none       &kp Z                          &kp X                      &long_press LG(C) C        &long_press LG(V) V                &kp B                              &kp N      &kp M                                &colon                       &semi_colon                  &kp MINUS                                   &plus_equal
                                                                      &mo 3                      &lt 1 BACKSPACE                    &kp SPACE                          &kp ENTER  &lt 2 DELETE                         &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        numbers+symbols {
            display-name = "num/sym";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5    |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Unlock|        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC   |        | ENT   |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2        &kp N3        &kp N4          &kp N5  &trans  &trans  &kp N6           &kp N7                                &kp N8                          &kp N9                                 &kp N0         &kp DOT
&trans     &none   &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &none   &trans  &trans  &kp LEFT_ARROW   &home_row_shift_right RIGHT_SHIFT UP  &home_row_right RIGHT_GUI DOWN  &home_row_right RIGHT_ALT RIGHT_ARROW  &kp PAGE_UP    &kp HOME
&trans     &none   &none         &none         &none           &none                   &bracket_pointy  &bracket_round                        &bracket_square                 &bracket_curly                         &kp PAGE_DOWN  &kp END
                                 &trans        &trans          &trans                  &trans           &trans                                &trans
            >;
        };

        fns {
            display-name = "fns";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&kp LS(LC(LG(NUMBER_4)))  &none         &none         &none         &none         &none       &trans  &trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans                    &kp C_PAUSE   &kp C_PLAY    &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans        &bt BT_CLR                  &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                                                      &kp LGUI      &trans        &kp SPACE                   &kp RET    &trans     &kp RALT
            >;
        };

        german {
            display-name = "german";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans           &trans           &trans           &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DE_EURO  &kp DE_A_UMLAUT  &kp DE_O_UMLAUT  &kp DE_U_UMLAUT  &kp DE_SZ  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans           &trans           &trans           &trans     &trans
                        &trans  &trans  &trans                  &trans       &trans           &trans
            >;
        };

        extra_layer_2 {
            display-name = "EXTRA 2";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_3 {
            display-name = "EXTRA 3";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_4 {
            display-name = "EXTRA 4";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_5 {
            display-name = "EXTRA 5";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_6 {
            display-name = "EXTRA 6";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
